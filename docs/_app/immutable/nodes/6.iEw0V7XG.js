import{t as d,a as p}from"../chunks/Cc3Z2_IL.js";import"../chunks/BeAKAaJP.js";import{ai as v,p as j,t as y,a as x,c as s,r as o,s as u}from"../chunks/CmVwLe1v.js";import{H as P}from"../chunks/CYgJF_JY.js";import{s as f}from"../chunks/D9amnkf5.js";import{c as S}from"../chunks/D3avQ4ob.js";import{i as D}from"../chunks/DyXqBrq2.js";import{p as I}from"../chunks/Q2x2Imnb.js";const k={title:"Blogginlägg 2",date:"2025-05-07"},{title:q,date:Q}=k;var O=d(`<h1>Startsidan</h1> <h2>Beskrivning:</h2> <p>Jag har lärt mig mycket om Tailwind CSS och sveltekomponenter. Sidan är nu mer fungerande än någonsin men det fins fortfarande mycket att göra.</p> <h2>Ändringar:</h2> <p>En massa ändringar har gjorts i appen. Inläggssidan är nu mer responsiv och har en bättre layout men behöver finslipas. Det finns nu ett eget färgtema som gett sidan nytt liv. “Skapa Inlägg”-sidan är på god väg men behöver fortfarande en del arbete. Den kan fortfarande ännu inte spara inläggen och den borde få ett slags pop-up när man skapar ett inlägg. Funktionaliteten för att skriva kommentarer är också på väg men ännu inte påbörjad, kommentarer visas men går inte att skriva.</p> <p>PS.
Skrivit en funktion som genererar ett slumpmässigt, och unikt, ID till varje inlägg när man öppnar sidan för att posta.</p> <p>Nu sparas även inläggen i local storage så att de inte försvinner när man laddar om sidan. De går att se påbörjad startsidan. Några kommande fixar som detta leder till är att det bara borde visas ett visst antal inlägg samtidigt på sidan samt att de senaste inläggen borde visas högst upp, nu är det i kronologisk ordning.</p> <h2>Nuvarande buggar:</h2> <p>Av någon anledning visas inte bilderna i nya inlägg, bara i de gamla. Jag har inte lyckats lista ut varför.</p> <p>Inte direkt en bugg men en ersättare för den röda layoutlinjen behövs. Den är för stark nu och får stilen att kännas tunn.</p> <p>Layouten på post-korten bör fixas. Mindre headerstorlek och footern bör vara på botten av kortet.</p> <hr> <br> Commit: <a href="https://github.com/Poppegon/Chattr/actions/runs" target="_blank">Version 0.0.1</a> <p>Published: 2023-04-02</p>`,1);function T(t){var a=O();v(28),p(t,a)}const $=Object.freeze(Object.defineProperty({__proto__:null,default:T,metadata:k},Symbol.toStringTag,{value:"Module"})),c={title:"Projektplan",date:"2025-04-02"},{title:R,date:U}=c;var w=d('<h1>Startsidan</h1> <h2>Beskrivning:</h2> <p>Forumets fördel är att alla i klassen kan ta del av det. Då skulle vi kunna ha en plats att konversera utan en app som tjänar pengar på att sälja våra data. Tyvärr så kanske det skulle bli lite för svårt och jag tror inte heller att Githubs servrar låter mig spara tillräckligt mycket för att alla inlägg ska kunna ligga kvar. Det är inte lätt att hitta någon dokumentation på hur mycket man får spara på servern och det lilla jag hittade om hur man gör sa att man måste ha en API för kommunikationen så att man kan spara inläggen på en plats där alla användare kan komma åt dem.</p> <p>Då beslutar jag mig för att göra en framsida till ett forum för att i trean göra funktionaliteten med kommunikationen. Väl medveten om att jag inte kommer vinna teknikdagens omröstning. Det jag gör nu innefattar:</p> <h2>Ändringar:</h2> <p>Inga ändringar i projektet ännu.</p> <h2>Framtida funktioner:</h2> <ol><li>✅ Likes/Dislikes</li> <li>✅ Ett sätt att skapa inlägg</li> <li>✅ Kommentarer</li> <li>✅ Taggar/kategorier för inläggen</li> <li>✅ NavBar</li> <li>✅ En detaljsida för varje post med [slug]</li></ol> <hr> <br> Commit: <a href="https://github.com/Poppegon/Chattr/actions/runs/14401749212" target="_blank">Version 0.0.0</a> <p>Published: 2023-04-02</p>',1);function C(t){var a=w();v(22),p(t,a)}const E=Object.freeze(Object.defineProperty({__proto__:null,default:C,metadata:c},Symbol.toStringTag,{value:"Module"}));function B(t,a){throw new P(t,a)}new TextEncoder;const M=!0;async function N({params:t}){const e=Object.entries(Object.assign({"../Inlägg 2.svx":$,"../Projektplan.svx":E})).find(([g])=>g.includes(`${t.blog_details}.svx`));if(!e)throw B(404,"Post not found");const n=e[1],{title:r,date:l}=n.metadata;return{content:n.default,title:r,date:l}}const W=Object.freeze(Object.defineProperty({__proto__:null,load:N,prerender:M},Symbol.toStringTag,{value:"Module"}));var z=d('<article id="post" class="dark:bg-surface-900 bg-surface-50 svelte-efxrkd"><h1> </h1> <p> </p> <div class="prose dark:prose-invert svelte-efxrkd"><!></div></article>');function X(t,a){j(a,!1);let e=I(a,"data",8);D();var n=z(),r=s(n),l=s(r,!0);o(r);var i=u(r,2),g=s(i);o(i);var m=u(i,2),h=s(m);S(h,()=>e().content,(b,_)=>{_(b,{})}),o(m),o(n),y(()=>{f(l,e().title),f(g,`Published: ${e().date??""}`)}),p(t,n),x()}export{X as component,W as universal};
